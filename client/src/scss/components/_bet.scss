@use "../_util.scss";
@use "../_colors.scss";

.bet {
  --stake-color: #{colors.by-name("secondary")};
  --on-stake-color: #{colors.by-name("on-secondary")};

  > ul {
    list-style: none;
    padding: 0;
    margin: 0;

    display: grid;
    grid-template-columns: [image] auto [details] minmax(5em, 1fr) [stats] auto;
    align-items: center;

    gap: 0.25em;

    > li {
      display: contents;

      &.winner {
        --stake-color: #{colors.by-name("good")};
        --on-stake-color: #{colors.by-name("on-good")};
      }

      > img {
        max-height: 4em;
        max-width: min(4em, 100%);
        min-width: 0;
        overflow: hidden;
        justify-self: center;
      }
    }

    .stats {
      grid-column: stats;
      display: flex;
      flex-flow: column wrap;
      align-items: center;
      justify-content: center;
      gap: 0.1em;

      .people {
        @include util.icon-aside;
      }
    }
  }

  > summary > .summary,
  > .summary {
    display: grid;
    grid-template:
      "title action . voted prog count" auto
      "desc desc desc desc desc desc" auto
      / auto auto 1fr auto auto auto;
    gap: 0.5em;
    align-items: center;

    flex-grow: 1;

    > h3 {
      grid-area: title;
      margin: 0;
      font-size: 1.5em;
    }

    > .interactions {
      grid-area: action;
    }

    > .voted {
      grid-area: voted;
    }

    > .progress {
      grid-area: prog;
    }

    > .total-votes {
      grid-area: count;
    }

    > .description {
      grid-area: desc;
      margin: 0;
    }
  }

  .details {
    display: grid;
    grid-template:
      "button name" auto
      "stakes stakes" 2em
      / auto 1fr auto;
    justify-items: stretch;
    align-items: center;
    grid-column: details;

    > .name {
      grid-area: name;
    }

    > .button {
      grid-area: button;
    }

    .stakes {
      height: 100%;

      display: flex;
      justify-content: stretch;
      align-items: stretch;
      grid-area: stakes;

      > span {
        position: relative;
        transition: flex-grow 1s ease-in-out;
        border-right: 0.1em dotted #000000;

        background-color: var(--stake-color);
        color: var(--on-stake-color);

        &.placeholder {
          opacity: 0;
          pointer-events: none;
        }

        &:last-of-type {
          border-right: unset;
        }

        &.local {
          --stake-color: #{colors.by-name("primary")};
          --on-stake-color: #{colors.by-name("on-primary")};
        }

        &.highlight {
          background: repeating-linear-gradient(
            45deg,
            #000000,
            #000000 0.05em,
            var(--stake-color) 0.05em,
            var(--stake-color) 0.25em
          );
        }

        > .stake {
          display: none;
          z-index: 1;

          position: absolute;
          top: 1.8em;
          left: 50%;
          transform: translateX(-50%);
          min-width: 8em;

          @include colors.by-name("tertiary");
          filter: drop-shadow(0 0 0.5em #000000);

          border-radius: 0.25em;
          padding: 0.25em;
          flex-flow: column wrap;
          justify-items: center;
          align-items: center;
          text-align: center;

          &::before {
            content: "";
            position: absolute;
            top: -0.55em;
            height: 0;
            width: 0;
            left: 50%;
            transform: translateX(-50%);
            border-top: 0.3em solid transparent;
            border-right: 0.4em solid transparent;
            border-bottom: 0.3em solid #{colors.by-name("tertiary")};
            border-left: 0.4em solid transparent;
          }
        }

        &:hover > .stake {
          display: flex;
        }
      }

      > .filler {
        transition: flex-grow 1s ease-in-out;
      }
    }
  }
}
